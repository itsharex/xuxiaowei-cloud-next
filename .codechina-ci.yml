stages:
  - package
  - s3-package
  - s3-service

#
# package
package:
  stage: package
  script:
    - git --version
    - echo 常量网址：https://docs.gitlab.com/ee/ci/variables/predefined_variables.html
    - echo 当前分支：$CI_COMMIT_BRANCH
    - echo 分支上存在的上一个最新提交：$CI_COMMIT_BEFORE_SHA
    - echo 分支上存在的上一个最新提交前八个字符：$CI_COMMIT_SHORT_SHA
    - echo ISO8601格式的提交时间戳：$CI_COMMIT_TIMESTAMP
    - echo "Name<email>格式提交的作者：$CI_COMMIT_AUTHOR"
    - echo 提交标记名称。仅在标签的管道中可用：$CI_COMMIT_TAG
    - echo 主分支：$CI_DEFAULT_BRANCH
    - echo 项目路径：$CI_PROJECT_DIR
    - JAVA_HOME=/software/dragonwell-17.0.3.0.3+7-GA
    - echo 单个执行器中构建执行的唯一ID：$CI_CONCURRENT_ID
    - echo 单个执行器和项目中构建执行的唯一ID：$CI_CONCURRENT_PROJECT_ID
    - echo 作业是否手动启动：$CI_JOB_MANUAL
    - echo 作业的名称：$CI_JOB_NAME
    - echo 作业阶段的名称：$CI_JOB_STAGE
    - echo 作业开始时的UTC日期时间，采用ISO8601格式：$CI_JOB_STARTED_AT
    - echo 创建管道时的UTC日期时间，采用ISO8601格式：$CI_PIPELINE_CREATED_AT
    - echo 当前项目的ID，此ID在GitLab实例上的所有项目中都是唯一的：$CI_PROJECT_ID
    - echo 作业的项目命名空间（用户名或组名）：$CI_PROJECT_NAMESPACE
    - echo 项目目录的名称：$CI_PROJECT_NAME
    - echo 包含项目名称的项目命名空间：$CI_PROJECT_PATH
    - echo GitLab实例的主要版本：$CI_SERVER_VERSION_MAJOR
    - echo GitLab实例的次要版本：$CI_SERVER_VERSION_MINOR
    - echo GitLab实例的补丁版本：$CI_SERVER_VERSION_PATCH
    - echo GitLab实例的完整版本：$CI_SERVER_VERSION
    - echo 开始作业的用户的电子邮件：$GITLAB_USER_EMAIL
    - echo 启动作业的用户的ID：$GITLAB_USER_ID
    - echo 启动作业的用户的用户名：$GITLAB_USER_LOGIN
    - echo 启动作业的用户的名称：$GITLAB_USER_NAME
    - echo 合并请求的实例级ID，这是GitLab上所有项目的唯一ID：$CI_MERGE_REQUEST_ID
    - echo 合并请求的项目级IID（内部ID），此ID对于当前项目是唯一的：$CI_MERGE_REQUEST_IID
    - echo 合并请求的目标分支名称：$CI_MERGE_REQUEST_TARGET_BRANCH_NAME
    - echo 作业详细信息URL：$CI_JOB_URL
    - echo 作业的内部ID，在GitLab实例中的所有作业中是唯一的：$CI_JOB_ID
    - echo 正在使用的Runner的唯一ID：$CI_RUNNER_ID
    - echo 运行作业的GitLabRunner的版本：$CI_RUNNER_VERSION
    - echo 管道详细信息的URL：$CI_PIPELINE_URL
    - echo 当前管道的实例级ID。此ID在GitLab实例上的所有项目中都是唯一的：$CI_PIPELINE_ID
    - echo 当前管道的项目级IID（内部ID），此ID仅在当前项目中是唯一的：$CI_PIPELINE_IID
    - echo GitLab实例URL的主机，没有协议或端口：$CI_SERVER_HOST
    - echo 项目的HTTP（S）地址：$CI_PROJECT_URL
    - echo 克隆Git存储库的URL：$CI_REPOSITORY_URL
    - wget --version
    - mvn clean -e -U package source:jar javadoc:jar install -Pgpg -DskipTests && PACKAGE_FLAG=1
    - if [ "$PACKAGE_FLAG" == "1" ]; then echo '打包完成'; else echo '打包失败' && xxxx; fi
  artifacts:
    name: package
    paths:
      - target/*.jar
      - target/*.asc
      - target/*.pom
      - "*/target/*.jar"
      - "*/target/*.asc"
      - "*/target/*.pom"
      - "*/*/target/*.jar"
      - "*/*/target/*.asc"
      - "*/*/target/*.pom"
  only:
    - main

#
# s3 打包
s3-package:
  stage: s3-package
  script:
    - git --version
    - echo 常量网址：https://docs.gitlab.com/ee/ci/variables/predefined_variables.html
    - echo 当前分支：$CI_COMMIT_BRANCH
    - echo 主分支：$CI_DEFAULT_BRANCH
    - echo 项目路径：$CI_PROJECT_DIR
    - JAVA_HOME=/software/dragonwell-17.0.3.0.3+7-GA
    - mvn clean -e -U package source:jar javadoc:jar install -DskipTests && PACKAGE_FLAG=1
    - if [ "$PACKAGE_FLAG" == "1" ]; then echo '打包完成'; else echo '打包失败' && xxxx; fi
  cache:
    paths:
      - passport-ui/node/
      - passport-ui/node_modules/
      - ui/node/
      - ui/node_modules/
  artifacts:
    paths:
      - target/*.jar
      - target/*.asc
      - target/*.pom
      - "*/target/*.jar"
      - "*/target/*.asc"
      - "*/target/*.pom"
      - "*/*/target/*.jar"
      - "*/*/target/*.asc"
      - "*/*/target/*.pom"
      - ui/dist
  tags:
    - s3
  only:
    - s3

# 嵌入
include:
  # 对象储存
  # 已禁用，有需要时才开放此内容
  # - /upload.yml
  # 服务部署
  - /service.yml
